/**
 * 23 patterns 
 * @author JiaBing
 * @date Sep 23, 2019 10:28:38 AM 
 * 
 * <p>参考网址：http://c.biancheng.net/design_pattern/<p>
 *
 * 
 * 设计模式 （来源于GOF : Gang of Four）
 *  	是对代码开发经验的总结，是解决特定问题的一系列套路。
 *  	它不是语法规定，而是一套用来提高代码可复用性、可维护性、可读性、稳健性以及安全性的解决方案
 *  
 *  这里总共描述23 种设计模式，以及相关例子。
 *  这 23 种设计模式的本质是面向对象设计原则的实际运用，是对类的封装性、继承性和多态性，以及类的关联关系和组合关系的充分理解。
 *  
 *  
 *  根据目的将这23种模式分为 三种
 *  
 *  一、创建型模式：
 *  	用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。GoF 中提供了单例、原型、工厂方法、抽象工厂、建造者等 5 种创建型模式。
 *  二、结构型模式：
 *  	用于描述如何将类或对象按某种布局组成更大的结构，GoF 中提供了代理、适配器、桥接、装饰、外观、享元、组合等 7 种结构型模式。
 *  三、行为型模式：
 *  	用于描述类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，以及怎样分配职责。
 *  	GoF 中提供了模板方法、策略、命令、职责链、状态、观察者、中介者、迭代器、访问者、备忘录、解释器等 11 种行为型模式。
 */
package pattern;


